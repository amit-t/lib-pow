version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - mysql
      - mongodb
    environment:
      PG_HOST: postgres
      PG_PORT: 5432
      PG_DB: unreq_test
      PG_USER: postgres
      PG_PASSWORD: postgres
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DB: unreq_test
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MONGO_URI: mongodb://mongodb:27017
    networks:
      - unreq-net
    ports:
      - "3001-3009:3001-3009"
    command: >
      sh -c "pnpm setup:pg && pnpm setup:mysql && pnpm setup:mongo && pnpm test:all"

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    networks:
      - unreq-net
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: unreq_test
    ports:
      - "3306:3306"
    networks:
      - unreq-net
    volumes:
      - mysql-data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    networks:
      - unreq-net
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  unreq-net:
    driver: bridge

volumes:
  postgres-data:
  mysql-data:
  mongo-data:
